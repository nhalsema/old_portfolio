{"version":3,"sources":["components/Popup.jsx","components/NavBar.jsx","components/LavaLamp.jsx","App.js","reportWebVitals.js","index.js"],"names":["PopUp","React","createElement","className","href","class","NavBar","_useState","useState","_useState2","_slicedToArray","showPopUp","setShowPopUp","NavLink","to","_ref","isActive","isPending","onClick","_ref2","_ref3","_ref4","title","target","rel","LavaLamp","rand","min","max","Math","random","useEffect","canvas","document","getElementById","ctx","getContext","width","window","innerWidth","height","innerHeight","addEventListener","globalCompositeOperation","backgroundColors","colors","count","blur","radius","clearRect","grd","createLinearGradient","addColorStop","fillStyle","fillRect","items","thisRadius","thisBlur","x","y","colorIndex","floor","colorOne","colorTwo","beginPath","filter","concat","fill","arc","PI","closePath","directionX","round","directionY","push","initialXDirection","initialYDirection","initialBlurDirection","gradient","requestAnimationFrame","changeCanvas","timestamp","forEach","item","App","id","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.61bef9a2.chunk.js","sourcesContent":["import React from \"react\";\r\n// import { useState } from \"react\";\r\nimport './Boxes.css';\r\n\r\nconst PopUp = () => {\r\n  // const [showPopup, setShowPopup] = useState(false);\r\n  return (\r\n    <div className='popBox popFont '>\r\n      <p>I'm A Pop Up!!!</p>\r\n      <a href=\"#\" class=\"close-btn\">X</a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopUp;\r\n\r\n{/* <div className=\"grid h-screen place-items-center \">\r\n<button onClick={openModal} className=\"bg-white px-4 py-3 rounded border-2 shadow-md shadow-red-600 hover:bg-gray-200\">Open Modal</button>\r\n\r\n<Modal\r\n  isOpen={modalIsOpen}\r\n  onRequestClose={closeModal}\r\n  style={customStyles}\r\n  contentLabel=\"Example Modal\"\r\n>\r\n  <div >\r\n    <button onClick={closeModal} className=\"relative right-0 float-right text-red-600 font-bolder text-2xl\">X</button>\r\n    <h2  className=\"text-center text-xl\">Modal Header</h2>\r\n    <div className=\"\">some text goes here...</div>\r\n   </div>\r\n</Modal>\r\n</div> */}\r\n\r\n\r\n// function PopUp() {\r\n//   handleClick = () => {\r\n//     this.props.toggle();\r\n//   return (\r\n//     <div className='poppop'>\r\n//       <p>I'm A Pop Up!!!</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default PopUp;\r\n\r\n\r\n// reference https://codepen.io/m3hm3tcan/pen/yLExMbe\r\n// has a nice close func","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport './Fonts.css'\r\nimport PopUp from \"./Popup.jsx\";\r\n\r\nfunction NavBar() {\r\n    const [showPopUp, setShowPopUp] = useState(false); // create a state variable\r\n\r\n    const clickPopUp = () => {\r\n        setShowPopUp(true); // set the state to true when the NavLink is clicked\r\n    };\r\n\r\n    // const closePopUp = () => {\r\n    //     setShowPopUp(false); // set the state to flase when the NavLink is closed\r\n    // };\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <nav className='navbar neon clickable' >\r\n                <ul>\r\n                    {/* <ul className='popped'> */}\r\n                    <li>\r\n                        {/* NOT DONE */}\r\n                        <NavLink\r\n                            to=\"/bio\"\r\n                            className={({ isActive, isPending }) => isPending ? \"pending\" : isActive ? \"active\" : \"\"}\r\n                            onClick={clickPopUp}  // add onClick event to the NavLink \r\n                        >\r\n                            bio\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        {/* NOT DONE */}\r\n                        <NavLink\r\n                            to=\"/stack\"\r\n                            className={({ isActive, isPending }) => isPending ? \"pending\" : isActive ? \"active\" : \"\"}>\r\n                            stack\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        {/* NOT DONE */}\r\n                        <NavLink\r\n                            to=\"/projects\"\r\n                            className={({ isActive, isPending }) => isPending ? \"pending\" : isActive ? \"active\" : \"\"}>\r\n                            projects\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        {/* NOT DONE */}\r\n                        <NavLink\r\n                            to=\"/readme\"\r\n                            className={({ isActive, isPending }) => isPending ? \"pending\" : isActive ? \"active\" : \"\"}>\r\n                            readme\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        {/* DONE */}\r\n                        <NavLink\r\n                            to=\"https://www.linkedin.com/in/nicolettehalsema/\"\r\n                            title=\"New tab to Linkedin.com/in/NicoletteHalsema\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\">\r\n                            linkedin\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        {/* DONE */}\r\n                        <NavLink\r\n                            to=\"https://1drv.ms/b/s!AqOM54YtUds1nGExugz8REUMfraF?e=0dFg3o\"\r\n                            title=\"New tab to OneDrive copy of resume\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\">\r\n                            resume\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        {/* DONE */}\r\n                        <NavLink\r\n                            to=\"mailto:Nicolettehalsema@gmail.com\"\r\n                            title=\"Open an email drafted to nicolettehalsema@gmail.com\"\r\n                            target=\"_blank\">\r\n                            contact\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            {showPopUp && <PopUp />} {/* render the PopUp component when the state is true */}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NavBar;","import { useEffect } from 'react';\r\n// reference: https://codepen.io/smpnjn/pen/yLPdEPQ \r\n\r\n\r\nfunction LavaLamp() {\r\n\r\n    const rand = function (min, max) {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n\r\n    useEffect(() => {\r\n        let canvas = document.getElementById('canvas');\r\n        let ctx = canvas.getContext('2d');\r\n\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n\r\n        window.addEventListener('resize', function () {\r\n            canvas.width = window.innerWidth;\r\n            canvas.height = window.innerHeight;\r\n            ctx = canvas.getContext('2d');\r\n            ctx.globalCompositeOperation = 'lighter';\r\n        });\r\n        let backgroundColors = ['#001219', '#001219'];\r\n        let colors = [\r\n            ['#F48C06', \"#EE9B00\"],\r\n            ['#CA6702', '#BB3E03'],\r\n            ['#AE2012', '#9B2226']\r\n        ];\r\n        // the above colors used for reference\r\n        // #001219\tblue black\r\n        // #F48C06\ttangerine  =  \t244, 140, 6\r\n        // #EE9B00\tgoldenrod \r\n        // #CA6702\tburnt orange\r\n        // #BB3E03\tornage red dark\r\n        // #AE2012\tbrick red\r\n        // #9B2226\tcherry \r\n\r\n        let count = 20;\r\n        let blur = [12, 70];\r\n        let radius = [1, 120];\r\n\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.globalCompositeOperation = 'lighter';\r\n\r\n        let grd = ctx.createLinearGradient(0, canvas.height, canvas.width, 0);\r\n        grd.addColorStop(0, backgroundColors[0]);\r\n        grd.addColorStop(1, backgroundColors[1]);\r\n        ctx.fillStyle = grd;\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        let items = [];\r\n\r\n        while (count--) {\r\n            let thisRadius = rand(radius[0], radius[1]);\r\n            let thisBlur = rand(blur[0], blur[1]);\r\n            let x = rand(-100, canvas.width + 100);\r\n            let y = rand(-100, canvas.height + 100);\r\n            let colorIndex = Math.floor(rand(0, 299) / 100);\r\n            let colorOne = colors[colorIndex][0];\r\n            let colorTwo = colors[colorIndex][1];\r\n\r\n            ctx.beginPath();\r\n            ctx.filter = `blur(${thisBlur}px)`;\r\n            let grd = ctx.createLinearGradient(x - thisRadius / 2, y - thisRadius / 2, x + thisRadius, y + thisRadius);\r\n\r\n            grd.addColorStop(0, colorOne);\r\n            grd.addColorStop(1, colorTwo);\r\n            ctx.fillStyle = grd;\r\n            ctx.fill();\r\n            ctx.arc(x, y, thisRadius, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n\r\n            let directionX = Math.round(rand(-99, 99) / 100);\r\n            let directionY = Math.round(rand(-99, 99) / 100);\r\n\r\n            items.push({\r\n                x: x,\r\n                y: y,\r\n                blur: thisBlur,\r\n                radius: thisRadius,\r\n                initialXDirection: directionX,\r\n                initialYDirection: directionY,\r\n                initialBlurDirection: directionX,\r\n                colorOne: colorOne,\r\n                colorTwo: colorTwo,\r\n                gradient: [x - thisRadius / 2, y - thisRadius / 2, x + thisRadius, y + thisRadius],\r\n            });\r\n        }\r\n\r\n\r\n        function changeCanvas(timestamp) {\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            let adjX = 1;\r\n            let adjY = 1;\r\n            let adjBlur = .5;\r\n            items.forEach(function (item) {\r\n\r\n                if (item.x + (item.initialXDirection * adjX) >= canvas.width && item.initialXDirection !== 0 || item.x + (item.initialXDirection * adjX) <= 0 && item.initialXDirection !== 0) {\r\n                    item.initialXDirection = item.initialXDirection * -1;\r\n                }\r\n                if (item.y + (item.initialYDirection * adjY) >= canvas.height && item.initialYDirection !== 0 || item.y + (item.initialYDirection * adjY) <= 0 && item.initialYDirection !== 0) {\r\n                    item.initialYDirection = item.initialYDirection * -1;\r\n                }\r\n\r\n                if (item.blur + (item.initialBlurDirection * adjBlur) >= radius[1] && item.initialBlurDirection !== 0 || item.blur + (item.initialBlurDirection * adjBlur) <= radius[0] && item.initialBlurDirection !== 0) {\r\n                    item.initialBlurDirection *= -1;\r\n                }\r\n\r\n                item.x += (item.initialXDirection * adjX);\r\n                item.y += (item.initialYDirection * adjY);\r\n                item.blur += (item.initialBlurDirection * adjBlur);\r\n                ctx.beginPath();\r\n                ctx.filter = `blur(${item.blur}px)`;\r\n                let grd = ctx.createLinearGradient(item.gradient[0], item.gradient[1], item.gradient[2], item.gradient[3]);\r\n                grd.addColorStop(0, item.colorOne);\r\n                grd.addColorStop(1, item.colorTwo);\r\n                ctx.fillStyle = grd;\r\n                ctx.arc(item.x, item.y, item.radius, 0, Math.PI * 2);\r\n                ctx.fill();\r\n                ctx.closePath();\r\n\r\n            });\r\n            window.requestAnimationFrame(changeCanvas);\r\n        }\r\n\r\n        window.requestAnimationFrame(changeCanvas);\r\n    }, []); // the empty array means the effect will only run once\r\n}\r\n\r\nexport default LavaLamp;","import React from 'react';\nimport './App.css';\nimport './components/Fonts.css';\nimport './components/Boxes.css';\nimport './components/LavaLamp.css';\nimport NavBar from './components/NavBar.jsx';\nimport LavaLamp from './components/LavaLamp.jsx';\n// import PopUp from './components/Popup.jsx';\n\n// notes for dev:\n// make site accessible \n// add link hover note where youre going\n// future add: mobile navbar = hamburger\n\n// THREE GOALS\n// 1. commit and display new site to github (ensure note about WIP)\n// 2. get the popup to close\n// 3. update bio and insert\n\nfunction App() {\n  // initiate\n  LavaLamp();\n  NavBar();\n  return (\n    <div>\n      <canvas id=\"canvas\"></canvas>\n      {/* ~~ navbar ~~ */}\n      <NavBar />\n      {/* ~~ name ~~ */}\n      <div className=\"nameBox\">\n        <h2>Nicolette <br /> Halsema</h2>\n      </div>\n      {/* ~~ desc ~~ */}\n      <div className=\"descBox\">\n        <h3>IT Professional <br />\n          Software Developer <br />\n          Technical Leader</h3>\n      </div>\n      {/* ~~ footer ~~ */}\n      <div className='footer'>\n        <h4>last updated: april 2023</h4>\n      </div>\n      {/* <PopUp /> */}\n    </div>\n  )\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}